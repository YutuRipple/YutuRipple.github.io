<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>递推与递归</title>
      <link href="/2023/09/01/%E9%80%92%E6%8E%A8%E4%B8%8E%E9%80%92%E5%BD%92/"/>
      <url>/2023/09/01/%E9%80%92%E6%8E%A8%E4%B8%8E%E9%80%92%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h1 id="P1255-数楼梯"><a href="#P1255-数楼梯" class="headerlink" title="P1255 数楼梯"></a>P1255 数楼梯</h1><p>此代码用到了STL容器实现高精度算法<br>PS：斐波那契数列问题<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5005</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; fib[N];</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">int</span>&gt; &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>()||i&lt;b.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;a.<span class="built_in">size</span>()) t+=a[i];</span><br><span class="line">        <span class="keyword">if</span>(i&lt;b.<span class="built_in">size</span>()) t+=b[i];</span><br><span class="line">        ans.<span class="built_in">push_back</span>(t%<span class="number">10</span>);</span><br><span class="line">        t/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t) ans.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    fib[<span class="number">0</span>]=fib[<span class="number">1</span>]=&#123;<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        fib[i]=<span class="built_in">add</span>(fib[i<span class="number">-1</span>],fib[i<span class="number">-2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=fib[n].<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) cout&lt;&lt;fib[n][i];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="P1002-NOIP2002-普及组-过河卒"><a href="#P1002-NOIP2002-普及组-过河卒" class="headerlink" title="P1002 [NOIP2002 普及组] 过河卒"></a>P1002 [NOIP2002 普及组] 过河卒</h1><p>一道入门级动态规划（数字三角形模型）<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">30</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> f[N][N];</span><br><span class="line"><span class="type">int</span> n,m,bx,by;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">find</span><span class="params">(PII t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t.first!=bx&amp;&amp;t.second!=by&amp;&amp;<span class="built_in">abs</span>(bx-t.first)+<span class="built_in">abs</span>(by-t.second)==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(t.first==bx&amp;&amp;t.second==by) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;bx&gt;&gt;by;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">find</span>(&#123;i,j&#125;)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> f[i][j]=f[(i<span class="number">-1</span>)&gt;=<span class="number">0</span>?i<span class="number">-1</span>:i][j]+f[i][(j<span class="number">-1</span>)&gt;=<span class="number">0</span>?j<span class="number">-1</span>:j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[n][m]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="P1928-外星密码"><a href="#P1928-外星密码" class="headerlink" title="P1928 外星密码"></a>P1928 外星密码</h1><p>模拟+递归思路，先定位第一个右括号的位置和与它最近的左括号。<br>将括号内的密码截取、“解压缩”后再拼回原段<br><code>注意：需要考虑到无括号的情况，否则会出RE</code><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">string <span class="title">solve</span><span class="params">(string &amp;str)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;j&lt;str.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[j]==<span class="string">&#x27;[&#x27;</span>) i=j;</span><br><span class="line">        <span class="keyword">if</span>(str[j]==<span class="string">&#x27;]&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=i+<span class="number">1</span>;str[k]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;str[k]&lt;=<span class="string">&#x27;9&#x27;</span>;k++)&#123;</span><br><span class="line">        num=num*<span class="number">10</span>+(str[k]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    string temp=str.<span class="built_in">substr</span>(i+cnt+<span class="number">1</span>,j-i<span class="number">-1</span>-cnt);</span><br><span class="line">    string model=temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt; num; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        model+=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    string ans=str.<span class="built_in">substr</span>(<span class="number">0</span>,i)+model+str.<span class="built_in">substr</span>(j+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;ans.<span class="built_in">size</span>();k++)</span><br><span class="line">        <span class="keyword">if</span>(ans[k]==<span class="string">&#x27;[&#x27;</span>) ans=<span class="built_in">solve</span>(ans);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    cin&gt;&gt;str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;str.<span class="built_in">size</span>();k++)</span><br><span class="line">        <span class="keyword">if</span>(str[k]==<span class="string">&#x27;[&#x27;</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="built_in">solve</span>(str)&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    cout&lt;&lt;str&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> DP </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暴力算法</title>
      <link href="/2023/08/29/%E6%9A%B4%E5%8A%9B%E7%AE%97%E6%B3%95/"/>
      <url>/2023/08/29/%E6%9A%B4%E5%8A%9B%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><p>题目来自洛谷官方题单，不定时更新打卡。</p></div><h2 id="洛谷P2089-烤鸡"><a href="#洛谷P2089-烤鸡" class="headerlink" title="洛谷P2089 烤鸡"></a>洛谷P2089 烤鸡</h2><p>很有趣的题目😅😅😅😅😅😅😅😅😅<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">10</span>)&#123; cout&lt;&lt;<span class="number">0</span>; <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">30</span>)&#123; cout&lt;&lt;<span class="number">0</span>; <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> t1 = <span class="number">1</span>; t1 &lt;=<span class="number">3</span> ; t1++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> t2 = <span class="number">1</span>; t2 &lt;= <span class="number">3</span>; t2++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> t3 = <span class="number">1</span>; t3 &lt;= <span class="number">3</span>; t3++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> t4 = <span class="number">1</span>; t4 &lt;= <span class="number">3</span>; t4++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> t5 = <span class="number">1</span>; t5 &lt;= <span class="number">3</span>; t5++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> t6 = <span class="number">1</span>; t6 &lt;= <span class="number">3</span>; t6++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="type">int</span> t7 = <span class="number">1</span>; t7 &lt;= <span class="number">3</span>; t7++)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="type">int</span> t8 = <span class="number">1</span>; t8 &lt;= <span class="number">3</span>; t8++)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="type">int</span> t9 = <span class="number">1</span>; t9 &lt;= <span class="number">3</span>; t9++)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="type">int</span> t10 = <span class="number">1</span>; t10 &lt;= <span class="number">3</span>; t10++)</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            <span class="keyword">if</span>(t1+t2+t3+t4+t5+t6+t7+t8+t9+t10==n) cnt++;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> t1 = <span class="number">1</span>; t1 &lt;=<span class="number">3</span> ; t1++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> t2 = <span class="number">1</span>; t2 &lt;= <span class="number">3</span>; t2++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> t3 = <span class="number">1</span>; t3 &lt;= <span class="number">3</span>; t3++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> t4 = <span class="number">1</span>; t4 &lt;= <span class="number">3</span>; t4++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> t5 = <span class="number">1</span>; t5 &lt;= <span class="number">3</span>; t5++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> t6 = <span class="number">1</span>; t6 &lt;= <span class="number">3</span>; t6++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="type">int</span> t7 = <span class="number">1</span>; t7 &lt;= <span class="number">3</span>; t7++)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="type">int</span> t8 = <span class="number">1</span>; t8 &lt;= <span class="number">3</span>; t8++)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="type">int</span> t9 = <span class="number">1</span>; t9 &lt;= <span class="number">3</span>; t9++)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="type">int</span> t10 = <span class="number">1</span>; t10 &lt;= <span class="number">3</span>; t10++)</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            <span class="keyword">if</span>(t1+t2+t3+t4+t5+t6+t7+t8+t9+t10==n) <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d %d %d %d %d\n&quot;</span>,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="洛谷P1618-三连击（升级版）"><a href="#洛谷P1618-三连击（升级版）" class="headerlink" title="洛谷P1618 三连击（升级版）"></a>洛谷P1618 三连击（升级版）</h2><p>1,2,3……9共9个数分成三组，说明9个数在答案中会不重不漏地出现，在这个条件下去构造数据。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> st[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">note</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=x/<span class="number">100</span>,b=x/<span class="number">10</span>%<span class="number">10</span>,c=x%<span class="number">10</span>;</span><br><span class="line">    st[a]=st[b]=st[c]=<span class="literal">true</span>;   <span class="comment">//标记x中的各个位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> has_ans=<span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> p1,p2,p3;</span><br><span class="line">    cin&gt;&gt;p1&gt;&gt;p2&gt;&gt;p3;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>/p3;i++)&#123;</span><br><span class="line">        <span class="type">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> a=i*p1,b=i*p2,c=i*p3;  <span class="comment">//构造数A,B,C</span></span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">100</span>) <span class="keyword">continue</span>;       <span class="comment">//如有数不足三位数，则不合题意</span></span><br><span class="line">        <span class="built_in">note</span>(a);</span><br><span class="line">        <span class="built_in">note</span>(b);</span><br><span class="line">        <span class="built_in">note</span>(c);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">9</span>;k++)</span><br><span class="line">            <span class="keyword">if</span>(!st[k])&#123; flag=<span class="literal">false</span>; <span class="keyword">break</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            has_ans=<span class="literal">true</span>;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">9</span>;k++) st[k]=<span class="number">0</span>;   <span class="comment">//清除标记</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!has_ans) cout&lt;&lt;<span class="string">&quot;No!!!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="P1036-NOIP2002-普及组-选数"><a href="#P1036-NOIP2002-普及组-选数" class="headerlink" title="P1036 NOIP2002 普及组 选数"></a>P1036 NOIP2002 普及组 选数</h2><p>PS：此代码使用了DFS（深度优先搜索）算法<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">25</span>;</span><br><span class="line">unordered_set&lt;<span class="type">int</span>&gt; item;</span><br><span class="line"><span class="type">int</span> args[N];</span><br><span class="line"><span class="type">bool</span> vis[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_prime</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=x/i;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> sum,<span class="type">int</span> pre)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==k)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">is_prime</span>(sum))&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=pre;j&lt;n;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[j])&#123;</span><br><span class="line">            vis[j]=<span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(i+<span class="number">1</span>,sum+args[j],j+<span class="number">1</span>);</span><br><span class="line">            vis[j]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;args[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    cout&lt;&lt;cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="P1157-组合的输出"><a href="#P1157-组合的输出" class="headerlink" title="P1157 组合的输出"></a>P1157 组合的输出</h2><p>PS:相当于上一题的简化版<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,r;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">25</span>];</span><br><span class="line"><span class="type">int</span> path[<span class="number">25</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> pre)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==r)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; r; i++) <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,path[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=pre;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            vis[i]=<span class="literal">true</span>;</span><br><span class="line">            path[u]=i;</span><br><span class="line">            dfs(u+<span class="number">1</span>,i+<span class="number">1</span>);</span><br><span class="line">            vis[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;r);</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="P1706-全排列问题"><a href="#P1706-全排列问题" class="headerlink" title="P1706 全排列问题"></a>P1706 全排列问题</h2><p>PS:与上一题轻微不同，上一题是组合数(combination)，这题是排列数(arrangement)<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">12</span>];</span><br><span class="line"><span class="type">int</span> path[<span class="number">12</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,path[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            vis[i]=<span class="literal">true</span>;</span><br><span class="line">            path[k]=i;</span><br><span class="line">            <span class="built_in">dfs</span>(k+<span class="number">1</span>);</span><br><span class="line">            vis[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟算法</title>
      <link href="/2023/08/27/%E6%A8%A1%E6%8B%9F%E7%AE%97%E6%B3%95/"/>
      <url>/2023/08/27/%E6%A8%A1%E6%8B%9F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><p>题目来自洛谷官方题单，不定时更新打卡。</p></div><h2 id="USACO2-4-两只塔姆沃斯牛The-Tamworth-Two"><a href="#USACO2-4-两只塔姆沃斯牛The-Tamworth-Two" class="headerlink" title="USACO2.4 两只塔姆沃斯牛The Tamworth Two"></a>USACO2.4 两只塔姆沃斯牛The Tamworth Two</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> m[<span class="number">12</span>][<span class="number">12</span>];</span><br><span class="line"><span class="type">int</span> ans;  <span class="comment">//需要分钟数</span></span><br><span class="line">unordered_set&lt;<span class="type">int</span>&gt; st;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Object</span>   <span class="comment">//创建农夫和奶牛的对象</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y,mi; <span class="comment">//坐标和下一步要移动的方向</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">in</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">0</span>||x&gt;<span class="number">10</span>||y&lt;=<span class="number">0</span>||y&gt;<span class="number">10</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getVal</span><span class="params">(<span class="type">int</span> x1,<span class="type">int</span> y1,<span class="type">int</span> x2,<span class="type">int</span> y2,<span class="type">int</span> z1,<span class="type">int</span> z2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x1+y1*<span class="number">10</span>+x2*<span class="number">100</span>+y2*<span class="number">1000</span>+z1*<span class="number">10000</span>+z2*<span class="number">100000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">move</span><span class="params">(<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y,<span class="type">int</span> &amp;mi)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 0,1,2,3对应北,东,南,西四个方向</span></span><br><span class="line">    <span class="keyword">if</span>(mi==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">in</span>(x<span class="number">-1</span>,y) || m[x<span class="number">-1</span>][y]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">            mi=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> x--;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mi==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">in</span>(x,y+<span class="number">1</span>) || m[x][y+<span class="number">1</span>]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">            mi=<span class="number">2</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> y++;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mi==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">in</span>(x+<span class="number">1</span>,y) || m[x+<span class="number">1</span>][y]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">            mi=<span class="number">3</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> x++;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mi==<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">in</span>(x,y<span class="number">-1</span>) || m[x][y<span class="number">-1</span>]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">            mi=<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> y--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建地图并找到牛和农的坐标</span></span><br><span class="line">    Object cow,farmer;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">10</span>;j++)&#123;</span><br><span class="line">            cin&gt;&gt;m[i][j];</span><br><span class="line">            <span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;F&#x27;</span>) farmer.x=i,farmer.y=j,farmer.mi=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;C&#x27;</span>) cow.x=i,cow.y=j,cow.mi=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//死循环模拟时间流逝，直到相遇或确定无法相遇</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(farmer.x==cow.x&amp;&amp;farmer.y==cow.y)&#123;</span><br><span class="line">            cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> spc = <span class="built_in">getVal</span>(farmer.x,farmer.y,cow.x,cow.y,farmer.mi,cow.mi);  <span class="comment">//得到农夫与奶牛当前位置的特征值（原理参考哈希算法）</span></span><br><span class="line">        <span class="keyword">if</span>(st.<span class="built_in">count</span>(spc))&#123;  <span class="comment">//已存在有相同的特征值（农夫、奶牛以相同的方向走过了相同的地点），说明不会相遇</span></span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        st.<span class="built_in">insert</span>(spc);</span><br><span class="line">        <span class="built_in">move</span>(farmer.x,farmer.y,farmer.mi);  <span class="comment">//移动</span></span><br><span class="line">        <span class="built_in">move</span>(cow.x,cow.y,cow.mi);</span><br><span class="line">        ans++;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NOIP2009普及组：多项式输出"><a href="#NOIP2009普及组：多项式输出" class="headerlink" title="NOIP2009普及组：多项式输出"></a>NOIP2009普及组：多项式输出</h2><p>没有任何难度的模拟题，但是如果在条件判断的细节上出错会浪费很多时间。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="function">string <span class="title">toString</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        str+=(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(str.<span class="built_in">begin</span>(),str.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> pt,reg;</span><br><span class="line">    string args=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    cin&gt;&gt;pt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=pt;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        cin&gt;&gt;reg;</span><br><span class="line">        <span class="keyword">if</span>(reg!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(reg&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=pt) args+=<span class="string">&quot;+&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;reg==<span class="number">1</span>)&#123;</span><br><span class="line">                    args+=<span class="string">&quot;x&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">1</span>) args+=<span class="string">&quot;^&quot;</span>+<span class="built_in">toString</span>(i);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;reg&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                    args+=<span class="built_in">toString</span>(reg);</span><br><span class="line">                    args+=<span class="string">&quot;x&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">1</span>) args+=<span class="string">&quot;^&quot;</span>+<span class="built_in">toString</span>(i);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    args+=<span class="built_in">toString</span>(reg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                args+=<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;reg==<span class="number">-1</span>)&#123;</span><br><span class="line">                    args+=<span class="string">&quot;x&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">1</span>) args+=<span class="string">&quot;^&quot;</span>+<span class="built_in">toString</span>(i);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;reg&lt;<span class="number">-1</span>)&#123;</span><br><span class="line">                    args+=<span class="built_in">toString</span>(<span class="built_in">abs</span>(reg));</span><br><span class="line">                    args+=<span class="string">&quot;x&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">1</span>) args+=<span class="string">&quot;^&quot;</span>+<span class="built_in">toString</span>(i);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    args+=<span class="built_in">toString</span>(<span class="built_in">abs</span>(reg));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;args&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高精度 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研例程(私有)</title>
      <link href="/2023/07/08/%E8%80%83%E7%A0%94%E8%A7%84%E5%88%92-%E7%A7%81%E6%9C%89/"/>
      <url>/2023/07/08/%E8%80%83%E7%A0%94%E8%A7%84%E5%88%92-%E7%A7%81%E6%9C%89/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="056f2329541b8af007c5307cba9f488e0f301dfd16ee20de87d6de2132456197">04a0b5f7b0389caf20ea0d2fa460eb41d68ca96dfcfe5a8a3aee653d48751994</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 加密日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础日语全攻略教程</title>
      <link href="/2023/06/17/%E6%97%A5%E8%AF%AD%E7%AE%80%E6%98%8E%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2023/06/17/%E6%97%A5%E8%AF%AD%E7%AE%80%E6%98%8E%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><p>这是一套由Themoeway站长Shoui整理的零基础日语学习攻略，由于hexo渲染字数限制，翻译并不完整。只翻译到30天日语入门的第5天（全部）和第6天（少部分）支持原创：访问<a href="https://learnjapanese.moe">https://learnjapanese.moe</a>查看原文<br>该教程需要你具备一定的英文理解水平、翻墙上网能力。本站并不提供翻墙教程，请自行解决。</p></div><h1 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h1><p>我知道以下的攻略很长，但是语言学习就是一个长期的过程，所以请一定花点时间将整个攻略读完。</p><h2 id="为什么许多人学习日语失败了"><a href="#为什么许多人学习日语失败了" class="headerlink" title="为什么许多人学习日语失败了"></a>为什么许多人学习日语失败了</h2><p>展开谈论之前，我想澄清一下我所谓的“失败”。意思是说，他们没能达成目标。很多人想达到流利沟通、看日语媒体不用字幕的水平。然而，许多人也不曾达到过这个目标，甚至无法接近。我相信绝大部分不是他们的错，而是方法错了。</p><p>学习一门语言时，无论你是属于所谓的“视觉学习者”还是“听觉学习者”，这些并不是决定性的因素。如果你是通过听来掌握母语的（就像我们所有人一样），那问题就大了，但显然你更像是一个“视觉学习者”。实际上，学习语言更多取决于所采用的学习方法。当然，还有其他因素，比如动力、每天学习的时间和毅力。但我相信学习方法在这其中扮演着非常重要的角色。</p><p>例如，如果有人告诉你可以通过阅读一本关于游泳的书籍来学会游泳，那么在你读完那本书之后，你能够游泳吗？显然不行。这是因为这种方法从根本上存在缺陷，是行不通的。</p><p>这个指南的目的是教导你有效的学习日语方法，以避免像其他失败者一样，而是取得成功，并且在学习目标语言（在这种情况下是日语）的过程中享受乐趣。关于“视觉学习者”和“听觉学习者”的观点，在其他学科中或许是有效的，但对于习得语言并不适用。我们所有人都以同样的方式习得语言，那就是通过可理解输入。我经常听到有人说：“每个人的学习方式都不同”，尽管在其他学科可能是正确的，但在语言习得方面并不适用。关键词：习得（acquisition）。</p><h3 id="学习-vs-习得"><a href="#学习-vs-习得" class="headerlink" title="学习 vs. 习得"></a>学习 vs. 习得</h3><p>准确地学习一门语言涉及到一种有意识的过程，类似于在学校中所经历的过程。个人会被要求记住“语法规则”和“词汇表”。在实际交流中，他们会回忆起所学过的规则和词汇，并试图用它们串成语言。根据语言习得领域的主要学者斯蒂芬·昆申（Stephen Krashen）的观点，这种方式比起习得（acquisition）方式并不是那么有效。</p><p>语言的习得是一种自然、直观和潜意识的过程，个体无需意识到这一点。</p><p>实际上，这意味着这个过程对每个人来说基本相同，因此自然习得的语言片段可以直观地运用，个人无需花时间思考和构建句子，使用学过的语法和词汇。最后，潜意识意味着个体并不知道这个过程正在发生；习得的过程可能并不感觉像是在“学习语言”，当获得新知识时，习得者并不觉得自己学到了什么。</p><p>习得需要与目标语言进行有意义的互动，此时习得者关注的是意义而不是形式。这意味着他们并不关注所听到的语言或自己的表达方式，而是关注所传达和理解的信息。</p><p>※ “学习日语”普遍指的是习得和学习两种情况。请牢记这一点。</p><h3 id="i-1"><a href="#i-1" class="headerlink" title="i+1"></a>i+1</h3><p>根据维基百科的定义：“输入假设（Input Hypothesis）认为，当学习者理解的语言输入略微超过他们目前的水平时，他们在语言知识上会有所进展。昆申将这种输入水平称为‘i+1’，其中‘i’代表学习者的语言当前水平，‘+1’代表即将习得的下一阶段。”</p><p>简单来说，i+1表示“语句中你还未理解的一部分”。举个例子，如果你正在学习英语，听到句子“I’m playing the guitar”，但你不知道“playing”这个词，那么这个句子就是i+1，因为除了“playing”之外，你理解其中的所有单词和语法结构。只要你理解了句子所传达的意思，它就是可理解的输入（comprehensible input）。</p><p>i+1的重要性在于，最高水平的习得收益是在这个水平上获得的。</p><p><img src="https://learnjapanese.moe/img/i1.jpg" alt=""></p><h3 id="输入-amp-可理解输入"><a href="#输入-amp-可理解输入" class="headerlink" title="输入&amp;可理解输入"></a>输入&amp;可理解输入</h3><p>输入（Input）指的是听和读目标语言的本地内容。大量的输入可以称为沉浸学习（immersion）。母语内容指的是由母语者为母语者制作的内容。（生肉）动漫是由母语者为母语者制作的，因此属于母语内容。可理解输入(comprehensible input)指的是传达和理解信息的输入。它是语言习得过程中最重要的要素。任何无法理解的输入都不足以进行语言习得，输入必须是可理解的。</p><p>然而，对于初学者来说，寻找可理解的输入可能会有一定困难，这是事实。我稍后将谈到如何从不可理解的输入中受益，但方式不同。语言并非从不可理解的输入中习得，而是从可理解的输入中习得。所以请牢记这一点。</p><p>还要记住说话（输出）并不等同于练习语言。当人们讲述他们通过大量说话提高了语言能力时，他们并没有意识到是他们从对话伙伴的输入中提升了语言技能。</p><p>说话（输出）只是锦上添花，而输入才是你真正习得语言的地方。</p><h3 id="清楚谁的建议值得信任"><a href="#清楚谁的建议值得信任" class="headerlink" title="清楚谁的建议值得信任"></a>清楚谁的建议值得信任</h3><p>尽可能听取他人的建议似乎是一种自然的做法，毕竟他们有经验，对吗？也许你可以学到一些有价值的东西？但实际上并非如此。如果你向某人请教，而该人未达到你想要达到的目标，那么你没有理由相信他们的建议。如果你相信他们的建议，那么你最终也只能达到他们目前的低水平。</p><p>作为一个初学者，你无法正确评判某人的语言能力，因为你对该语言的掌握非常低，或者几乎没有，所以你无权判断你的朋友是否真的擅长日语。</p><p>这为什么重要呢？因为我经常遇到这样的人，他们会说：“但是我有学日语的朋友告诉我……”，而朋友告诉他们的东西通常是错误的或者含混不清的。</p><p>你的朋友是否已经接近你想要达到的目标？如果没有，如果你按照他们的建议行事，你将很难超越他们目前的低水平。这就好像从一个胖子那里寻求减肥建议一样。</p><h2 id="高效学日语"><a href="#高效学日语" class="headerlink" title="高效学日语"></a>高效学日语</h2><p>现在你明白了语言习得的根本，我们一起钻研如何学日语。</p><h3 id="假名"><a href="#假名" class="headerlink" title="假名"></a>假名</h3><p><img src="https://learnjapanese.moe/img/kana3.png" alt=""></p><p>假名（Kana）指代平假名（Hiragana）和片假名（Katakana），它们是日语的两种书写系统。平假名和片假名是同一语言中相同音素的两种不同形式。</p><p>平假名用于那些没有用汉字书写的单词和姓名，以及语法。书写者可以选择是否使用汉字形式。片假名用于从其他语言借用的词汇和外国姓名，它也可以用于强调，但平假名和片假名的用法并不总是一致，所以要注意这一点。掌握假名并不困难，因此我建议你按照自己的方式学习。如果能配有音频就更好了。助记法可能听起来是个好主意，但我见过人们抱怨说它会使回忆假名的过程变慢，所以我建议你采用刻苦训练的方法。</p><p><strong>你必须先学假名</strong></p><p>我建议你读<a href="https://itazuraneko.neocities.org/grammar/taekim.html">Tae Kim</a>，读到<em>The Writing System</em>暂停。这能解答你对假名的所有不理解的概念，这样你能即时准确地反应过来他们是什么、怎么用。</p><p>之后，你应该将下面的图表摘抄到笔记本什么的，此后你可能再也不需要使用笔了。</p><p>图标：</p><p><img src="https://learnjapanese.moe/img/hiragana_katakana_LARGE.png" alt=""></p><p><em>点击查看大图</em></p><p>完成后你应该上<a href="https://djtguide.neocities.org/kana/index.html">DJT Kana</a>检查在<code>show/hide</code>的假名自行测试。确保你还滚到了下面，检查所有组合平/片假名！</p><p>如有疑惑执行以下步骤：</p><div class="note primary simple"><ol><li><p>阅读 Tae Kim 的<em>The Writing System</em>部分，直到你完全掌握为止。</p></li><li><p>将上面的表格抄写到笔记本或其他纸上。</p></li><li><p>使用 DJT Kana 来进行测试。确保你通过<code>show/hide</code>来检查所有的假名并进行测试。确保你还滚到了下面并检查所有的平/片假名组合！</p></li></ol></div><p>大约一周后，您应该已经熟悉了所有假名</p><h3 id="汉字"><a href="#汉字" class="headerlink" title="汉字"></a>汉字</h3><p><img src="https://learnjapanese.moe/img/kanji2.jpg" alt=""></p><p align="center">日本一年级学生的汉字表</p><p>汉字（Kanji），字面上意思是“中国汉族文字”，是日语写作系统的第三部分。它们是表意文字，因此比假名复杂得多。日本学校义务制系统教授了2136个汉字，然而不要被这个数字迷惑。</p><p>在日常生活中使用了约3000多个汉字。汉字在需要时使用。当你在日语上进一步进阶时，你最终会理解这意味着什么。</p><p><img src="https://learnjapanese.moe/img/highlighted_manga.png" alt=""></p><p>上图来源于 <em>Love Live! Sunshine!!</em>漫画，展示了平假名(hiragana),片假名(katakana)和汉字(kanji)</p><p><strong>学习汉字的方法 - 词汇学习汉字 vs. 独个学习汉字</strong></p><p>学习汉字有两种方法。第一种方法是<strong>通过词汇学习</strong>汉字，即通过阅读学习单词，而不关注单个汉字的意义。你可以通过在词典中查找来完全理解词语如”守銭奴”，而无需知道单个汉字的意思。</p><p>第二种方法是独个学习汉字，即学习单个汉字的意义和构成。例如，”守“意为”守卫“，”銭“意为”钱“，”奴“意为”人“，它们组合在一起形成了”守銭奴“这个词。这种方法可以使记忆词汇变得更容易，但可能需要更多时间，因此这取决于你是否认为它值得。</p><p>通过词汇学习汉字还有一个有趣的方面，就是如果你了解其他使用相同汉字的词语，它可以帮助你记忆。例如，如果你理解了词语如”守護”、”銭湯”和”売国奴”，那么理解”守銭奴”会变得更容易。</p><div class="note info modern"><p>说实话，给这部分内容做翻译挺别扭的。我相信作为中国人，应该自带汉字的基础认识了，无论是记忆单个字还是词汇都不算难事</p></div><p><strong>如何结合词汇学汉字</strong></p><p>这是学习汉字最简单的方法，也是我个人采用的方法。大多数人可以通过参考假名表来阅读假名，但对于汉字来说却不行。那么如何学会读汉字呢？</p><p>看看上面的漫画图片。看看第一个面板。你看到了”人数”这个词吗？这是一个词。在词典（例如Jisho）中查找它。你会得到发音：”にんずう (ninzuu)”和意义：”人数”。很棒，继续下一个。就是这样！但不要指望一次查阅就能记住单词，所以你应该阅读大量内容来积累和维持汉字技能。在本指南的结尾，我将介绍如何更简便地查阅单词。</p><p><strong>如何独个学习汉字</strong></p><p><img src="https://learnjapanese.moe/img/kanji.png" alt=""></p><p>作为初学者接触汉字时，它们可能看起来像涂鸦，而不是规则的形状。汉字有常见的形状和模式，而独立学习汉字可以帮助你看到这些常见的形状和模式。例如，”草”并不是一个随机的图样，你可以看到它由”艹”、”曰”和”十”组成。</p><p>我推荐的独个学习汉字的途径是<strong>Kodansha kanji learner’s course (KKLC)</strong>，你可以在<a href="https://mega.nz/#!ncYFXTyJ!KXwmhJu4QogtPasf0wt_zxyGvIfnm4gXxKsmdIv51sQ">这里</a>得到这本书，并在<a href="https://mega.nz/#!ncYFXTyJ!KXwmhJu4QogtPasf0wt_zxyGvIfnm4gXxKsmdIv51sQ">这里</a>找到学习指南。不要学习书中的词汇！只按照<a href="#词汇">词汇</a>和<a href="#挖掘">挖掘</a>部分的描述学习词汇。</p><p>话虽如此，通过长时间的阅读和查阅单词，你将逐渐学会靠直觉识别汉字。然而，许多人在没有先前学习的情况下可能很难阅读日本汉字，这时独个学习汉字可能会有所帮助，因为它可以提前给你一个关于汉字意义的提示。然而，独个学习汉字需要投入大量时间，而且在任何实质性的方式上并不有助于了解日语，要真正地”学会汉字”，你无论如何都需要进行词汇学习。你应该自己决定是否要进行独个学习汉字。</p><h3 id="词汇"><a href="#词汇" class="headerlink" title="词汇"></a>词汇</h3><p>在语言学习的过程中，学习词汇是其中的重头戏，因此你将花费大量时间来学习词汇。</p><p>Anki 是一种间隔重复系统（SRS）的记忆卡片程序。它旨在帮助你记住信息。你可以在<a href="https://apps.ankiweb.net/">此处</a>获取</p><p><img src="https://learnjapanese.moe/img/anki21_tango_example.jpg" alt=""></p><p>你应该使用 Anki 来积累一些基础词汇，以辅助你的语言沉浸学习。在掌握一些基础词汇之后，从沉浸学习中学习词汇，尤其是通过阅读，会变得更容易。通常人们会使用Core 2K牌组来掌握 2000 个词汇。它的工作方式是将需要学习的词汇显示在正面，而背面则包含词汇的意思、发音以及带声音的例句。你通过回想所显示词汇的意思和发音来学习Core 2K中的词汇。然而，我建议不要使用Core 2K，而是建议你使用<a href="https://learnjapanese.moe/resources/#vocabulary"><em>Tango N5+N4</em></a>牌组，以下是原因：</p><p>与 Core 2K 相比，Tango N5+N4 更容易。Tango 牌组的正面是一个句子，而 Core 2K 的正面只有单词。<br>Tango 牌组通过在正面展示一个句子，并在背面提供理解句子所需的信息（意思和发音）来进行学习。如果你理解了句子，就点击 “Good”，如果没有理解，就点击 “Again”。<br>牌组名称中的 “N” 数字指的是日本语言能力测试（JLPT），N5 是最低级别、最容易的，N1 是最高级别。<br>句子使得回想词汇更容易，毕竟它更贴近我们在现实生活中使用语言的方式，而不是孤立的单词。</p><p><strong>然而，需要注意的是，Tango的翻译并不是逐字逐句的，也不能很好地代表日语的结构，所以我认为这是Tango的一个缺点。在其他意境下，它可能是完全错误的。</strong></p><p>人们一直在苦苦挣扎着学习Core 2K，为了让学习过程更顺利，我推荐使用<a href="https://learnjapanese.moe/resources/#vocabulary"><em>Tango N5+N4</em></a>而不是Core 2K，尤其是如果你不想进行孤立的汉字学习！</p><p>我建议你在学会了假名并掌握了极其基础的语法后开始使用Anki学习词汇。什么是极其基础的语法取决于你自己的决定。在本节之后，我将介绍如何学习语法，所以不要慌张。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>在学习语法时，重要的是要知道语法指南的目的不是使你成为语言的专家，而是只给你一个基本的了解语言运作方式的基础，真正理解语法只能通过沉浸学习来实现。因此，我建议你选择一个语法指南，阅读/观看它，并进行沉浸学习。</p><p><strong>选择一个语法指南</strong></p><p>市面上有许多语法指南，有些很好，但也有些不太好。为了避免给学习者带来困惑，我只提到两个语法指南：Tae Kim 和 Cure Dolly。没有一个语法指南是完美无缺的，它们各有优缺点。Tae Kim的写作非常好，非常适合初学者，但其中一些解释可能有点错误，并且读起来可能会有些乏味。Cure Dolly则采用了一种非传统的方式来教授日语语法，试图以更符合直觉的“有机”方式教授日语语法。然而，Cure Dolly对于纯粹的初学者来说不太友好，你至少需要一些背景知识才能观看。此外，其音频质量很差。</p><p>你可以在下面找到这两个语法指南的链接：</p><p><a href="https://itazuraneko.neocities.org/grammar/taekim.html">Tae Kim</a></p><p>Android和iOS的应用程序可进行离线查看！请注意，该指南中的所有内容都被视为“基础日语”，即使是“高级”部分也是如此。</p><p><a href="https://www.youtube.com/playlist?list=PLg9uYxuZf8x_A-vcqqyOFZu06WlhnypWj">Cure Dolly</a></p><p>建议打开字幕，并将速度设置为1.25倍！</p><p>还是那句话，我建议在进行语法学习时结合沉浸学习和词汇学习。</p><h3 id="挖掘"><a href="#挖掘" class="headerlink" title="挖掘"></a>挖掘</h3><p>挖掘（Mining）意味着将词汇（通常与其所在句子一起）添加到你的Anki牌组中。然后，你可以随着时间的推移复习这些闪卡，以确保你不会忘记它们。通常建议在完成Tango N5+N4后立即开始挖掘。你不必担心Tango N3、N2和/或N1，因为此时你应该从沉浸学习中制作自己的卡片，总的来说是一个有趣的过程。</p><p>挖掘是一项你将长时间进行的工作，因此非常重要。<br>在挖掘的“形式”方面存在许多争议，但我认为“动漫词汇卡”形式非常好，并且对我非常有帮助。</p><p><strong>动漫词汇卡</strong></p><p>动漫词汇卡是与标准词汇卡不同的高质量卡片。标准词汇卡正面只是汉字形式单词，而单词的读音和意思在背面。高质量的词汇卡与之恰恰相反，高质量词汇卡拥有句子的音频（动漫片段或视觉小说语音），还有图片（视觉小说插画或动漫截图）和句子的来源，这不知道比标准词汇卡好到哪儿去了？</p><p>我认为在完成Tango N5和N4后，逐渐停止使用句子卡片（Tango牌组实际上就是句子卡片），因为随着对简单日语的熟悉，词汇卡片会变得简单且迅速掌握。</p><p><img src="https://learnjapanese.moe/img/cardexample1.jpg" alt="Anime Cards"></p><p>※被叫做“动漫词汇卡”是因为<a href="https://animecards.site/">AnimeCards Site</a></p><p><strong>优势</strong></p><p>+ 便于设置</p><p>+ 快速复习。我每30分钟回顾500张卡</p><p>+ 能够挖掘任何一切（不遵从i+1）</p><p>+ 用提示字段补充一词多义</p><p>完成 Tango N5 和 N4 牌组后，你应该阅读此网站<a href="https://animecards.site/ankisetup/">AnimeCards Site</a>以了解如何设置挖掘牌组</p><h3 id="怎么沉浸-输入"><a href="#怎么沉浸-输入" class="headerlink" title="怎么沉浸(输入)"></a>怎么沉浸(输入)</h3><p>沉浸时需要做的事情根据你所处的阶段而有所不同。这就是为什么做一个适合所有人的日语指南如此艰难。我只会把初学者要做的讲透。</p><h4 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h4><p>首先，当涉及到沉浸学习时，你必须学会容忍模糊点。重点不是理解每个细节。学习者常常因为一无所知而感到沮丧，但我认为不理解是完全正常的，你应该为自己能够辨认出每个词汇、每个细微的理解部分而高兴。只因为你现在不理解，并不意味着你将永远不会理解。学习日语最重要的部分就是享受其中的乐趣。</p><p>当你是初学者时，我建议你先进行听力沉浸而不是阅读沉浸。这是因为当你刚开始接触一门外语时，你还不习惯该语言的音素（音标），所以阅读可能会给你带来不准确的口音。这时你会将你母语中类似但错误的音素与日语联系起来，无法在没有进行一些音标映射的情况下阅读。所以，你只能通过首先熟悉音素来避免这种情况，而唯一的方法就是原声听力训练。</p><p>此外，听力是连贯不断的，所以在沉浸学习时你会感到更加舒适。相比之下，作为初学者阅读沉浸非常懊恼，因为你可能每分每秒都需要查阅单词。</p><p>令人惊讶的是，作为初学者，在听力沉浸中仍然有许多i+1的机会，特别是当你在沉浸学习的同时学习语法和词汇时，因此它仍然可以被视为可理解输入，即使你不理解其他部分。但请记住，语言并不是通过不可理解的输入习得的。这很真实，然而，你仍然从不可理解的输入中获益，但方式有所不同；它提高了你区分音素的能力，换句话说，给了你更好的口音。即使你不太理解，沉浸学习仍然是与日语互动的绝佳方式。</p><p>尽管如此，此阶段的沉浸（输入）仍然大部分是不可理解的，但你可以通过完成Tango Anki牌组来改变这种情况。<br>请注意，你需要专注于你的沉浸学习（主动沉浸）。仅仅把它作为背景声音播放而不加以关注（被动沉浸）是不会对你有所帮助的。</p><p><strong>选择沉浸材料</strong></p><p>在选择沉浸学习的内容时，最好选择具有视听组件的内容，比如动画片和日剧（电视剧）。电视剧具有视觉组件，并且有一个情节，所以这会提供更多的i+1机会。不建议初学者使用播客或有声读物进行沉浸学习，因为很难理解正在发生的事情。如果你正在学习日语，那么你很可能是动漫粉，你可以利用这一点进行沉浸学习，甚至可以选择你以前看过的动漫。</p><p>另外，在观看之前阅读该集的剧情概要对理解情节很有帮助，这样你就可以获得更多的语言习得收益。</p><p>（作为初学者）在主动沉浸的同时我需要“做什么”？</p><p>尝试理解消息。从电视节目中你可以推断出很多东西。就像Krashen所说，你需要与语言进行“有意义的”（集中意义）交互，而不是关注形式（例如语法）。</p><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><p>阅读无论在哪个阶段都能带来很大的益处。然而，作为一位初学者，初期阅读会出现一些问题。<br>早期阅读可能对你的口音产生不良影响。而且你的阅读能力不一定总能转化为听力能力，尤其是如果你的听力能力相对较低的话。</p><p>当你是个初学者时，我推荐看带有日文字幕的日本动画来进行阅读练习。日文字幕在最好的情况下就是阅读沉浸，类似于带有声音的视觉小说。光在后台播放声音并不能改善你的口音，也不能提高你的听力能力，你需要进行原声听力练习。你可以访问<a href="https://animecards.site/minefromanime/">animecards.site</a>了解如何观看带有日文字幕的动画。</p><p>无论如何，我认为从看日文字幕开始进行阅读是不错的选择。然后过渡到漫画，然后是轻小说/视觉小说等。我认为在阅读时要控制自己的节奏，不要在初学者阶段读难度太高的小说，通常来说，读一些与你水平接近的书籍更好。<br>在我们的<a href="https://learnjapanese.moe/resources">资源</a>中，你可以找到许多免费阅读日本漫画和小说的网站链接。还有日文字幕，所以一定要查看一下！</p><p><strong>平衡听力与阅读</strong></p><p>平衡是很重要的。将时间平均分配可能是显而易见的方法，如果你能做到这一点，那就很好。然而，并不是每个人都有这么多时间，而且对于阅读来说，根据你目前的水平，长时间阅读可能会相当困难。例如，那些在Tango Anki牌组中进展较快的人可能会读得比那些进展较慢的人时间更长。</p><p>那么什么是完美的平衡？<br>我无法回答这个问题，这取决于你自己的实验和决定。这完全取决于你的时间安排和目前的水平。你不需要从第1天就开始阅读，等到你能够从<a href="https://learnjapanese.moe/resources/#vocabulary">Tango N5</a>Anki牌组中阅读基本单词大约需要几周时间。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>从选择的语法指南开始学习<a href="#假名">假名</a>。</p></li><li><p>下载并设置Anki，导入Tango N5牌组</p></li><li><p>点击Tango N5牌组旁边的齿轮 deck &gt; Options。每天新卡片的默认限制设置为20张。你可以先坚持这个数字几天，看看情况如何，如果觉得太多，可以将限制降低到15张甚至10张。在“复习”选项卡中，将每天最大复习次数设置为9999次。不要对这个数字感到惊讶。它可能不会超过150次，并且保持较好的记忆率。如果无法跟上复习进度，请减少每天新卡片的数量，而不是降低最大复习次数。这是因为不按时进行复习会影响Anki的间隔重复系统。Anki需要长期的坚持才能发挥有效作用，尝试制定一个计划。个人建议早上醒来时上Anki复习。</p></li><li><p>每天进行Anki复习，<strong>同时</strong>学习选择的语法指南和沉浸。</p></li><li><p>重复以上步骤，直到完成Tango N5，然后开始学习Tango N4。现在你应该对阅读感到更舒适，我建议你开始阅读简单的漫画或观看带有日语字幕的动画。</p></li><li><p>完成Tango N4后，设置你的挖掘(mining)牌组，想看啥看啥，想读啥读啥，<strong>尽情享受!!</strong></p></li></ol><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这样就好了！通过以上方式流利说日语。还有别忘了最重要的部分：沉浸，Anki和语法只是协助你沉浸。</p><p>音乐不是沉浸</p><p>把歌词当作阅读材料倒也可以。</p><p>This guide would have not been possible if it was not for Stephen Krashen, Mass Immersion Approach, All Japanese All The Time, AntiMoon, Daily Japanese Thread/Itazuraneko, and my brothers and sisters here in TheMoeWay. Thank you all!</p><div class="note info flat"><p>第一次读完可能不太明白这篇攻略，花点时间尽可能多地阅读，直到你完全明白为止。</p></div><hr><h1 id="30天日语入门"><a href="#30天日语入门" class="headerlink" title="30天日语入门"></a>30天日语入门</h1><p>一个帮助大家从零开始用<strong>沉浸法</strong>学习日语的指南/例程</p><p>这个例程需要按顺序执行。大多数选择已经为你做好了。</p><p>例程已经被拆分为天。每天都有你需要完成的任务。</p><p>预计在30天结束后你会：</p><ul><li><u>了解最常见的日语语法句式</u></li><li><u>至少500个词汇量</u></li><li><u>了解生活动漫片段中的简单句</u></li><li><u>认读平假名、片假名和一些常见汉字的能力</u></li><li><u>继续自学日语的良好基础</u></li></ul><p>我希望你有：</p><ul><li><span class='p red'>学习的恒心</span></li><li><span class='p red'>每天给日语预留 3+ 小时的空闲时间</span></li><li><span class='p red'>一台电脑 (对不起了，手机党)</span></li></ul><h2 id="第1天"><a href="#第1天" class="headerlink" title="第1天"></a>第1天</h2><h3 id="阶段：初识假名"><a href="#阶段：初识假名" class="headerlink" title="阶段：初识假名"></a>阶段：初识假名</h3><p>学习日语的第一件事肯定是学好<strong>假名</strong>。假名就是<strong>平假名和片假名</strong>的简称。<br>为什么以及如何使用它们会让日语初学者感到困惑。<br>所以，我推荐先阅读<a href="https://itazuraneko.neocities.org/grammar/taekim.html#6%20The%20Scripts">这个</a><br>从平假名和片假名部分开始读，到汉字部分截止。</p><p>文字量相当大。可能需要花点时间<br>顺带一提你点进链接不是在记忆假名。我下面会解释之后怎么做。<br>当你读完之后，摘抄这张<a href="https://learnjapanese.moe/img/hiragana_katakana_LARGE.png">图表</a>。</p><p>学习如何写假名很重要，因为这也可以更容易区分它们。别担心你的字迹漂不漂亮。<br>你可以写在纸或者屏幕上，这都不重要。</p><p>然后，观看视频：<a href="https://www.bilibili.com/video/BV1ut4y1P74p/">https://www.bilibili.com/video/BV1ut4y1P74p/</a><br>这是 JapanesePod 的视频，可能应该是你唯一应该观看的Japanesepod 视频，话是这么说…</p><p>现在，去这个网站。<a href="https://itazuraneko.neocities.org/learn/kana.html">https://itazuraneko.neocities.org/learn/kana.html</a></p><p>展开<code>show/hide options</code></p><p>为（Hiragana, Hiragana combinations, Katakana, Katakana combinations）这些分类点击<code>check all</code>选项</p><p>在文本框中键入正确的罗马拼音，以此练习你对假名的熟练度。</p><p>花10分钟这么练习<br>可以在你的手机上设个倒计时</p><h2 id="第2天"><a href="#第2天" class="headerlink" title="第2天"></a>第2天</h2><h3 id="阶段：身处日本"><a href="#阶段：身处日本" class="headerlink" title="阶段：身处日本"></a>阶段：身处日本</h3><p>在 <a href="https://itazuraneko.neocities.org/learn/kana.html">learn kana</a> 这个网站练习<strong>10</strong>分钟  。<br>在此倒计时: <a href="https://www.online-stopwatch.com/timer/10minutes/">10 Minutes Timer - Online Stopwatch</a>. （其实手机也行）别忘了勾选所有假名。</p><p>为每天的生活营造一个日语环境是<strong>沉浸</strong>学习法最重要的一环。</p><p>这可能很难选择，但是你需要找你感兴趣的内容并且养成观看的习惯。<br>日常番就是不错的切入点。<br>有很多很多动漫都有简单的日语。<br>这里给些建议（不过看什么最终取决于你）：</p><ul><li><p>Love Live! (任意季)</p></li><li><p>悠哉日常大王</p></li><li><p>鬼灭之刃 (译者：确定不是开玩笑？？？)</p></li><li><p>声之形</p></li><li><p>萤火之森</p></li><li><p>穿越时空的少女</p></li><li><p>干物妹小埋</p></li><li><p>想哭的我戴上了猫的面具</p></li><li><p>摇曳百合</p></li><li><p>光之美少女  （任意季）</p></li><li><p>珈百璃的堕落</p></li><li><p>校园乌托邦 学美向前冲！</p></li><li><p>轻音少女</p></li><li><p>青春之旅</p></li><li><p>白兔糖</p></li><li><p>飞翔的魔女</p></li><li><p>秒速5厘米</p></li><li><p>黄金拼图</p></li><li><p>New Game</p></li></ul><p>在<a href="">动漫资源</a>查看更多动漫。建议下载动漫，因为这样可以更轻松地携带动漫。</p><p><strong>问：这些动漫太太太太无聊了!!!!我想看点真正好看的!</strong></p><p>答：你说的也没错！<strong>沉浸</strong>感就是花时间阅读你感兴趣的内容。所以请不要局限于我的建议。</p><p><strong>你的任务：</strong><br>我想让你第一次尝试“字幕辅导”沉浸</p><p>字幕辅导方法是先看一集带中文字幕的动漫，然后再看一遍不带字幕的。再然后在做其他事情时听它（无线耳机就很方便）。</p><p>大致流程像这样：</p><ol><li><p>带中文字幕看一遍</p></li><li><p>完全不带字幕看一遍（也就是啃生肉）</p></li><li><p>上述你今天都完成了吗？</p><ul><li><p>是：在你做其他事情的同时后台播放剧集（怕打扰其他人的话带个无线耳机）。</p></li><li><p>否：返回步骤1</p></li></ul></li></ol><p>从本质上讲，通过先观看带字幕的剧集，您已经增加了可理解输入。<br>而啃生肉时，别担心听不懂。<br>尝试把注意力放在声音、发音方式以及任何能理解的地方<br>距离能听懂日语这项技能还有很长的路要走<br>但这一切始于多听生肉，将听变得可理解。<br>字幕辅导方法只是为您正在收听的音频提供语境。<br>我还建议在做其他事情时收听音频。<br>这么做的实际意义是在填补日语的空缺，也就是说，即使只有几秒钟，你也可能会注意所说的内容。</p><p><em>注意</em>：边听边做其他事=<strong>被动沉浸</strong><br>全神贯注地听=<strong>主动沉浸</strong></p><p><strong>问：为什么任何词汇和语法都没学就开始沉浸了？</strong></p><p>答：有些人可能会好奇我为什么想要你在学词汇和语法前沉浸？那是因为听力是学习语言的关键。日本人的生活环境（无论他们走到哪里，语言都在那里），日本人非常擅长他们的母语。通过复制该环境进一步复制结果。 即使听不懂也要多听，这样可以更轻松地学习日语的新单词并加深对这门语言的感受。</p><p><strong>问：额……我已经看完一集了，然后该做啥？</strong></p><p>答：你可以考虑完成当天的沉浸，但如果你想继续（好办），那么你可以掷骰子来决定要观看多少集。</p><p><a href="https://www.google.com/search?q=roll+a+4+sided+dice">扔个骰子</a></p><p>我不想在你的第二天就把你压垮，所以明天就开始学习语法。</p><h2 id="第3天"><a href="#第3天" class="headerlink" title="第3天"></a>第3天</h2><h3 id="阶段：初学语法"><a href="#阶段：初学语法" class="headerlink" title="阶段：初学语法"></a>阶段：初学语法</h3><p>继续做日常假名训练10分钟： <a href="https://itazuraneko.neocities.org/learn/kana.html">https://itazuraneko.neocities.org/learn/kana.html</a> 。</p><p>倒计时:  <a href="https://www.online-stopwatch.com/timer/10minutes/">https://www.online-stopwatch.com/timer/10minutes/</a></p><p>现在要开始学语法了</p><p>现在你不需要做练习或任何事</p><p>你不需要选择正确选项/图案之类的东西</p><p>你接下来要学的知识极其的平常并会随着你每天的沉浸逐渐强化</p><p>我想让你使用Cure Dolly’s Organic Japanese作参考</p><p>Youtube的播放清单就放在这儿了：<a href="https://www.youtube.com/playlist?list=PLg9uYxuZf8x_A-vcqqyOFZu06WlhnypWj">https://www.youtube.com/playlist?list=PLg9uYxuZf8x_A-vcqqyOFZu06WlhnypWj</a></p><p>对于一些喜欢阅读的人，这里有<a href="https://docs.google.com/document/d/1OwVPStFrXRjXvzmrFQUfXpEiPNspYq6JYxA4zDTlhPM/edit">Cure Dolly粉丝自制教科书</a></p><p>你要做的就是<strong>看视频</strong>和<strong>做笔记</strong></p><p>（可以用Google Keep笔记： <a href="https://keep.google.com/">https://keep.google.com/</a>）</p><p><strong>注意：我推荐看语法视频的时候打开字幕</strong></p><p><strong><em>每天看3个视频</em></strong></p><p>这是个好数字啊，按这个速度下去30天之后你差不多就看完了</p><p><strong>[敲黑板]</strong></p><p><strong>问：那我做笔记该写什么啊？</strong></p><p>答：你该写些你感觉重要的东西，凭直觉。</p><p>如果Cure Dolly说“这个的意思是…”那你可能就会做笔记了。</p><p>你的笔记就是<strong>你自己的</strong>，要做你自己的笔记。</p><p><strong>问：为什么我还要做笔记！反正我大概能全部记住！</strong></p><p>答：让你做笔记是方便你<strong>在需要时</strong>复习。</p><p>你实际上是在笔记本上写了个mini版的视频</p><p>所以，要是你真的忘了些东西，你总是可以查阅笔记</p><p><strong>问：我真的不想做笔记啊……</strong></p><p>答：也行！我十分认同做笔记是一种个人偏好</p><h3 id="阶段：完成你的第一节语法课"><a href="#阶段：完成你的第一节语法课" class="headerlink" title="阶段：完成你的第一节语法课"></a>阶段：完成你的第一节语法课</h3><p>当你第一次看完3个Cure Dolly的视频，可以说你的“今天的语法部分完成了”</p><p>现在你要开始<strong>沉浸</strong></p><p><a href="https://www.google.com/search?q=roll+a+4+sided+dice">扔个四面骰子</a></p><p><strong>问： 那还需要使用“字幕辅导”方法吗 ?</strong></p><p>答： <strong>不用</strong>。那只是使沉浸在一开始更加有趣。我只是把它作为一种你可以使用的方法</p><p><strong>问： 要是我听到一个有趣的单词并想要了解意思该怎么办？</strong></p><p>答：首先，那很好<br>你可以上<a href="https://jisho.org/">Jisho.org</a> 搜索单词。有一种可能是你听错了，那你就搜不出来。</p><p>明天还会更复杂。 要不…向前看?</p><h2 id="第4天"><a href="#第4天" class="headerlink" title="第4天"></a>第4天</h2><h3 id="阶段：用Anki学汉字和新单词"><a href="#阶段：用Anki学汉字和新单词" class="headerlink" title="阶段：用Anki学汉字和新单词"></a>阶段：用Anki学汉字和新单词</h3><p>今天，你将：</p><ul><li><p>练习假名</p></li><li><p>学习语法</p></li><li><p>第一次使用Anki</p></li><li><p>在Anki上学习新单词</p></li><li><p>在你的电脑上设置日语键盘</p></li><li><p>日常的沉浸学习</p></li></ul><p>任务繁重，请确保你今天有足够的空闲时间</p><p>在此站练习假名10分钟<a href="https://itazuraneko.neocities.org/learn/kana.html">https://itazuraneko.neocities.org/learn/kana.html</a></p><p><a href="https://www.online-stopwatch.com/timer/10minutes/">倒计时</a></p><p>完成后，进行日常的语法学习。</p><p>记住前一天的规划：<strong>3部Cure Dolly的视频</strong></p><p>完成之后，来设置Anki吧</p><p>首先，看看这个视频：<a href="https://www.youtube.com/watch?v=UDUITtA1jJI">https://www.youtube.com/watch?v=UDUITtA1jJI</a></p><p>马上下载Anki吧</p><p>你可以访问<a href="https://apps.ankiweb.net/">Anki的官网</a>点击<kbd>Download</kbd>按钮。它应该会滚动到页面下方的下载部分。点击第一项。</p><p>在<a href="https://anacreondjt.gitlab.io/docs/coredeck/">这里</a>下载所需牌组</p><p>首次打开Anki，应该会看到“界面语言选择”。按你的偏好选择中文/英语/日语都可以（以下用英文版演示）</p><p>顶部菜单栏进入<strong>Tools</strong>，点击<strong>Preferences (Ctrl+P)</strong>。</p><p>在这个窗口，点击<strong>Scheduling</strong>表，看看选项“V3 Schedule”是否勾选(✓)</p><p>把<strong>Learn ahead limit</strong>改成900</p><p>然后点close</p><p>在Anki，窗口的底部有3个按钮。<strong>Import File</strong>用来导入你下载好的牌组。一旦点击，就会打开文件选择框。<br>选择你下载好的牌组<br>结束导入过后会展示包含一摞子文本的盒子，直接按ok<br>现在你应该会看见牌组和它旁边一个蓝色的数字<br>蓝色数字代表你一天要完成的新卡片数量</p><p>默认20张卡<br>20张卡可能不是不是很好记<br>当你发现复习起来比较难可能会想要减少卡片数量。不过暂时不用担心</p><p>点击<em>Core2.3k Version 3</em> deck旁的齿轮图标<br>点击Options<br>把<strong>Maximum reviews/day</strong>设成<code>9999</code>.这意味着“上不封顶”<br>默认值为 200，如果你每天都做 Anki，我认为你的卡片不会堆积那么高，取消复习限制是一种很好的做法。</p><p>再来点Anki小技巧<br>你还需要把改 <strong>Learning steps</strong>到<code>1m 5m 10m</code><br>修改<strong>Insertion order</strong>(插入顺序)为<strong>Sequential (oldest cards first)</strong><br>在<strong>Lapses</strong>项之下，<em>Relearning Steps</em>改成<code>10m</code><br>在<strong>Display Order</strong>(显示顺序)项之下，<em>New/review order</em>改成<strong>Show before reviews</strong>。</p><p>现在点击Save(保存)<br>你还需要安装<em>Speed Focus Mode</em> Anki add-on。我之后会说原因，先安装吧。</p><p>点击Anki顶部的<em>Tools</em>然后点<em>Add-ons</em>。<br>点击<strong>Get Add-ons</strong>….<br>把这段代码粘贴到输入框:<code>1046608507</code>然后点OK。<br>关闭Anki然后重新打开。</p><p>点击<em>Core2.3k Version 3</em> deck旁的齿轮图标。<br>按住<kbd>Shift</kbd>键然后点<em>Options</em>。</p><p>应该会打开一个外观不同、带有一些红色文本的菜单。(如果没有。按住<kbd>Shift</kbd>键的同时点击<em>Options</em>).</p><p>在<em>General</em>一栏中，有一些设置需要更改。</p><p><em>Automatically play alert</em>改为 <code>10</code> seconds.</p><p><em>Automatically show answer</em>改为 <code>15</code> seconds.</p><p><em>Automatically rate again</em>改为 <code>60</code> seconds.</p><p>现在让我们开始学习这套牌组。<br>当你点击牌组的名字，你就能点<em>Study now</em>开始学习<br>你马上会注意到….<br>这里有个你可能会读的词…”する”…（如果单词不是する那么你需要检查卡片的INSERTION ORDER!）<br>但是它下面有一个非常<strong>生畏</strong>的汉字<br>忽略它！<br>只关注顶行，那才是你实际要学的。<br>下面一行只是一个例句。<br>目前，我不能说它很有用。<br>但这副牌中的所有东西都非常常见。<br>现在我要你仔细阅读<br>你实际上正在测试的是，你是否能读懂这个词<strong>并且</strong>知道它的意思。<br>在日语学习中，我们把这称为 “学习<strong>阅读</strong>和<strong>理解</strong>“<br>举个例子，する，读起来简单。就读する！它不是汉字。下一个单词 言う 确切地使用了汉字。<br>当你点击底部的<em>Show answer</em>（快捷键<kbd>Space</kbd>），你可以查看单词的意思。<br>牌组还有其他有趣的特点<br>背面的有个图像，还有音频。<br>图像描绘了例句的意境。这个不是很重要<br>底部还有句子的翻译<br>如果看不见的话往下滚动<br>等等…<br>你也许会好奇，为什么我甚至不能在它应该出现的例句中看到这个词？<br>原因是，它其实在那儿，只是变型了。<br>你会在Cure Dolly那里学到变型<br>这些变型对现在的你来说望而生畏，所以不要担心在这组卡中学变型的问题。<br>这些例句对你来说还太高级了。<br>当你学一个日语单词，你学它的基本形态，也就是不变型形式。<br>等等…<br>所以，在这里到底是做什么呢？<br>好吧，看见顶部穿过卡片的白线了吗？<br>这是卡片的 “正面 “和 “背面 “之间的分隔线。<br>卡片<strong>背面</strong>的第一行是<strong>读音</strong><br>卡片<strong>背面</strong>的第二行是<strong>意思</strong><br>这是你必须记住的两部分信息<br>不要把脑力浪费在思考其他事上<br>看看底部栏，有四个按钮。这是你的评级选项<br>在Anki，你必须手动给单词评级<br>把<strong>Again</strong>等价为“我没记住”。<strong>Easy</strong>等价为非常简单，<strong>Good</strong>就是一般般，<strong>Hard</strong>表示“我用心攻克了好长一段时间才记住”<br>因为这是<strong>第一次看</strong>这张卡片，所以要按<strong>Again</strong><br>当见到“没见过的卡片”（你还没评级的卡片）。常见的最佳做法是翻到背面（按“Show answer”），然后阅读重要信息（“读音和意思”），然后按“Again”。<br>这会把卡片发送到“Learning“牌堆中<br>你看到底部栏上的红色数字从 0 变为 1 了吗？<br>红色数字就是你学习中(Learning)的卡片数量</p><p><span class='p blue'>蓝色</span>：New牌堆  ——  <span class='p red'>红色</span>：Learning牌堆   ——   <span class='p green'>绿色</span>：Review牌堆</p><p>学习中的牌堆会多次抽卡让你记忆</p><p>达成足够多次Good就算你这张卡完成了。这意味着你会在X天后再见到它（新卡一般是1天）</p><p>当Learning牌堆（红色数字）下降，表示有卡片已经学完</p><p>当你15秒后仍不清楚这个单词就查看它，看得久也不代表你能第一时间想起。</p><p>所以，加<strong>Speed Focus Mode</strong>的目的就是防止你在一张卡片上耗太多时间。</p><p><strong>我的卡片学习方法</strong><br>第一步：查看卡片<br>第二步：识别是否是新卡<br>第三步：确定是新卡后翻到背面（显示答案）<br>第四步：读Reading项（读假名）<br>第五步：读meaning项（读意思）<br>第六步：播放音频<br>第七步：对于目前，按“Again”<br>第八步：如果下一张卡片依然是新卡，以上7步保持不变<br>第九步：如果下一张卡是我已经看过的了，我会自测知识水平<br>第十步：我尝试回想单词的意思和读音<br>第十一步：有时候一词多义，记住一个就够了<br>第十二步：我翻到背面<br>第十三步：我会根据词汇的真正含义与我所记忆的是否相符，给自己打分<br>第十四步：通常我对了的话会点Good按钮，错了点Again</p><p>当你成功学完20张卡后，就认可当天的Anki完成了<br>明天你预计能看到一组绿色（Review）牌堆<br>同样你也有全新的一组20张新卡<br>确保你每一天都搞完Anki</p><p><strong>问：为什么UsagiSpoon推荐Core而不是Tango</strong></p><p>答：简明回答：Core能学到更多<br>Core每张卡片会教新的单词。单词的顺序针对动漫和视觉小说优化，因为是从它们中取的最常见单词。Tango与之相对，成吨的卡片不引入新单词，然后重复许多相似的句子。——IMO就是很低效。Tango有奇怪的英语翻译和种种问题。<br>写Usagispoon的那一天我原本全篇写的是怎么使用Tango牌组。然而我不得不指出“嘿，别看翻译！”，还有“有些单词你可能永远不会在动漫见到“等等等等…所以最后我说Core牌组有多好，然后决定用它。<br>虽然Core明显更难（很显然啊！每一张卡片都要介绍新的东西），但是比起Tango更能使你受益。</p><p><strong>问：我该不该担心忘记很多的情况？</strong></p><p>你不断忘记单词就好比滴水穿石形成无底洞。<br>记忆是依靠线索起作用的<br>记词不牢靠，意味着这个词在更广的范围内有多种因素使你的记忆无法检索到相应的线索。<br>简单来讲，你需要除卡片内的更多、更细分的信息<br>对于这些无底洞，我建议看看例句。你可以去 <a href="https://jisho.org/search/%20%23sentences%20%E8%B8%8F%E3%82%80">Jisho.org的#sentence标签</a>找有英文翻译的例句</p><p><strong>设置日语键盘</strong></p><p>来设置一个日语键盘吧<br>读这篇文章： <a href="http://www.miamioh.edu/cas/academics/centers/ilrc/technical-support/jpn-win-keyboard-entry/">http://www.miamioh.edu/cas/academics/centers/ilrc/technical-support/jpn-win-keyboard-entry/</a><br>文章写的很好<br>完成之后我来教你些最有用的功能</p><p><kbd>Alt</kbd>+<kbd>`</kbd>(在数字按键1的左侧)：从只输入字母切换到输入假名，像这样：かな。当任务栏上的标志是“A”的时候，如果你键入“kana”那输出的结果就是“kana”。而标志为“あ”时会变成“かな”</p><p><kbd>Space</kbd>：变型。当你想打汉字，你必须打出读音，然后使用Space（空格）来变型。对于日本人的…日本姓氏，你输入的假名有多个候选的变型选项。我们试一个你可能刚学的，言う。想要打成汉字你必须切换到假名输入模式（标志“あ”）然后键入いう，再按空格，直到“言う”被选中，再按下<kbd>Enter</kbd>。如果你想输入假名不变型，就键入你想要的直接按回车。</p><p><kbd>F7</kbd>：平假名变型</p><p><kbd>Win</kbd>+<kbd>Space</kbd>：切换输入键盘（只有当你拥有超过一个语种的键盘时有效，举个例子<code>中文（简体）</code>和<code>日本語（日本）</code>）</p><p>现在呢我觉得到每日沉浸练习的时间了<br>我希望骰子游戏能够助你习惯沉浸<br>我建议你定好每天沉浸的动画剧集数量<br>如果难以决定，那么扔一发骰子，富贵险中求！<br><a href="https://www.google.com/search?q=roll+a+4+sided+dice">扔个四面骰子</a></p><h2 id="第5天"><a href="#第5天" class="headerlink" title="第5天"></a>第5天</h2><p>上这个网址<a href="https://itazuraneko.neocities.org/learn/kana.html">https://itazuraneko.neocities.org/learn/kana.html</a>练习假名10分钟。<br>倒计时：<a href="https://www.online-stopwatch.com/timer/10minutes/">https://www.online-stopwatch.com/timer/10minutes/</a><br>现在开始每日Anki练习<br>Anki练习一开始比较难<br>但养成习惯慢慢会好的！</p><p>今天的Anki会稍稍不同。你会在牌组旁看到一个蓝色数字 和 绿色数字<br><strong>绿色</strong>数字是你需<strong>复习</strong>单词数</p><p>确保你首先完成复习！<br>重要建议：如果你无法跟上堆积如山的复习量，请减少每天的新卡上限！<br>做完了当天的Anki后，就该上手每日的语法学习了</p><p><strong>3部Cure Dolly视频！</strong></p><p>之后，就是日常沉浸</p><p><strong>问：看多少集</strong></p><p>答：<a href="https://www.google.com/search?q=roll+a+4+sided+dice">扔个四面骰子</a></p><p><strong>问：听的时候需要注意什么？</strong></p><p>答：发音，说话方式，冒出的很多单词和语法有多少你学过的。</p><p>每一点都很重要</p><h2 id="第6天"><a href="#第6天" class="headerlink" title="第6天"></a>第6天</h2><h3 id="阶段：第一次阅读练习日语字幕"><a href="#阶段：第一次阅读练习日语字幕" class="headerlink" title="阶段：第一次阅读练习日语字幕"></a>阶段：第一次阅读练习日语字幕</h3><p>今天你会开始第一场读音训练！<br>将会十分艰难<br>不懂也不必担心<br>千里之行，始于足下！</p><p><a href="https://itazuraneko.neocities.org/learn/kana.html">假名练习网站</a></p><p><a href="https://www.online-stopwatch.com/timer/10minutes/">10分钟倒计时</a></p><p>之后，继续做你的Anki<br>Anki完后，3部Cure Dolly视频<br>然后我们就开始阅读吧。<br>设置有点棘手，但让我们来看看。</p><p>首先，你得准备Yomichan</p><p>点击这个<a href="https://learnjapanese.moe/yomichan">链接</a>阅读指导</p><p>设置好Yomichan后，紧跟以下步骤</p><p>在你的chrome扩展设置中（<code>chrome://extensions</code>），开启右上方的<strong>Developer mode</strong></p><p>紧接着下载<a href="https://github.com/killergerbah/asbplayer/releases">asbplayer Extension</a>,你必须手动下载，它不在Chrome的应用商店</p><p>你需要先解压.zip的文件</p><p>现在去Chrome的扩展设置中点击“Load unzipped（加载已解压的扩展程序）”</p><p>选择程序所在文件夹<br>重启浏览器<br>然后你还要获取你想看的动漫的字幕文件<br>那我们就用…Love Live (2013）来举例吧。</p><p><a href="https://kitsunekko.net/dirlist.php?dir=subtitles%2Fjapanese%2F">Kitsunekko</a>对动漫日语字幕的收录最全</p><p><strong>注意：该网站有概率宕机。你可以在<a href="https://learnjapanese.moe/kitsubackup.html#/ja">此处</a>查看备份</strong></p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2023/06/10/Test-article/"/>
      <url>/2023/06/10/Test-article/</url>
      
        <content type="html"><![CDATA[<h2 id="一篇文章"><a href="#一篇文章" class="headerlink" title="一篇文章"></a>一篇文章</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello World!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
